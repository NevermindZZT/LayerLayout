apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

version '1.0.0'
group 'io.github.nevermindzzt'

final String GROUP_ID = "io.github.nevermindzzt"

final String VERSION = "1.0.0"

final String DESCRIPTION = "a layer layout"
final String GITHUB_URL = "https://github.com/NevermindZZT/LayerLayout"

// Create the POM configuration - required for jCenter uploading
def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from "$buildDir/javadoc"
}


// Create the publication with the pom configuration:
publishing {
    publications {
        Release(MavenPublication) {
            groupId GROUP_ID
            version VERSION
            artifactId project.getName()

            //from components.android
            artifact sourcesJar
            artifact javadocJar

            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

            pom.withXml {
                def root = asNode()
                root.appendNode('description', DESCRIPTION)
                root.appendNode('name', project.getName())
                root.appendNode('url', GITHUB_URL)
                root.children().last() + pomConfig
            }
        }
    }
}

//BinTray configuration - credentials stored in user's gradle.properties
bintray {
    user = getBinTrayUser()
    key = getBinTrayKey()

    publications = ['Release']

    pkg {
        repo = 'maven'
        name = project.getName()
        desc = DESCRIPTION
        vcsUrl = GITHUB_URL + '.git'
        websiteUrl = GITHUB_URL
        issueTrackerUrl = GITHUB_URL + '/issues'
        licenses = ['MIT']
        publish = true

        version {
            name = VERSION // Version name i.e. "1.0"
            desc = DESCRIPTION
            vcsTag = VERSION
            released = new Date()
        }
    }
}

def final getBinTrayUser() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty('bintray_user')
}

def final getBinTrayKey() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty('bintray_api_key')
}
